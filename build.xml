<project name="japex" default="dist" basedir=".">
    <property environment="env"/>

    <property file="${user.home}/build.properties" />
    
    <property name="app.jar" value="japex.jar"/>

    <property name="jfreechart-dir" value="${basedir}/lib/jfreechart/"/>
    <property name="jwsdp-dir" value="${basedir}/lib/jwsdp/"/>
    <property name="jdsl-dir" value="${basedir}/lib/jdsl/"/>

    <tstamp>
        <format property="TSTAMP" pattern="hhmmss"/>
    </tstamp>

    <property name="package.dir" value="package"/>
    <property name="build.number" value=""/>
    <property name="build.id" value="${DSTAMP}-${TSTAMP}"/>
    <property name="release.impl.version" value="1.1.1"/>

    <!-- task that generates a manifest file -->
    <macrodef name="createManifest">
        <attribute name="file"/>
        <sequential>
            <copy tofile="@{file}"
            file="./resources/manifest.mf"
            overwrite="yes"/>
            <replace file="@{file}">
                <replacefilter token="@@@@IMPL_VERSION@@@@"
                value="${release.impl.version}"/>
                <replacefilter token="@@@@VENDOR_ID@@@@"
                value="com.sun"/>
                <replacefilter token="@@@@BUILD_ID@@@@"
                value="${build.id}"/>
                <replacefilter token="@@@@BUILD_NUMBER@@@@"
                value="${build.number}"/>
            </replace>
        </sequential>
    </macrodef>

    <path id="compile.class.path">
        <fileset dir="${jwsdp-dir}" includes="*.jar"/>
        <fileset dir="${jfreechart-dir}" includes="*.jar"/>
    </path>
    
    <path id="compile.jdsl.class.path">
        <fileset dir="${jdsl-dir}" includes="*.jar"/>
        <path refid="compile.class.path"/>
    </path>

    <path id="class.path">
        <pathelement location="dist/lib/${app.jar}"/>
    </path>
    
    <path id="jni.class.path">
        <path refid="compile.class.path"/>
        <pathelement location="build/classes"/>
    </path>
    
    <target name="clean">
        <delete dir="dist"/>
        <delete dir="build"/>
        <delete dir="src/binding"/>
    </target>
    
    <target name="prepare">
        <mkdir dir="build"/>
        <mkdir dir="build/classes"/>
    </target>
    
    <target name="prepare.binding" depends="prepare">
        <uptodate property="generate.xml.notRequired" targetfile="src/binding/com/sun/japex/testsuite/TestSuiteElement.java">
            <srcfiles dir="resources" includes="testsuite.xsd"/>
        </uptodate>
        <mkdir dir="src/binding"/>
    </target>
    
    <target name="binding.jaxb" depends="prepare.binding" unless="generate.xml.notRequired">
        <java fork="true" classname="com.sun.tools.xjc.Driver">
            <classpath refid="compile.class.path"/>
            <jvmarg line="-Xms128m"/>
            <jvmarg line="-Xmx128m"/>
            <arg line="-d src/binding"/>
            <arg line="resources/testsuite.xsd"/>
        </java>
    </target>
    
    <target name="compile.binding" depends="binding.jaxb">
        <javac fork="yes" memoryInitialSize="128m" memoryMaximumSize="128m" srcdir="src/binding"
            destdir="build/classes" debug="on" optimize="on" deprecation="on">
            <classpath refid="compile.class.path"/>
        </javac>
        <copy todir="build/classes/">
            <fileset dir="src/binding" includes="**/*.properties, **/bgm.ser"/>
        </copy>
    </target>
    
    <target name="compile.jdsl" depends="compile" description="Compiles JDSL only">
        <javac srcdir="src/com/sun/japex/jdsl" destdir="build/classes" debug="on" optimize="on" deprecation="on">
            <classpath refid="compile.jdsl.class.path"/>
        </javac>
    </target>

    <target name="compile" depends="compile.binding" description="Compile sources">
        <javac srcdir="src" destdir="build/classes" debug="on" optimize="on" deprecation="on"
            excludes="com/sun/japex/jdsl/**">
            <classpath refid="compile.class.path"/>
        </javac>
        <copy todir="build/classes/resources">
            <fileset dir="resources">
                <include name="*.xsl"/>
                <include name="*.xsd"/>
                <include name="*.css"/>
                <include name="*.gif"/>
            </fileset>
        </copy>
    </target>
    
    <target name="build" depends="compile, compile.jdsl" description="Compiles Japex"/>
    
    <target name="dist" depends="compile, compile.jdsl" description="Build distribution">
        <mkdir dir="dist"/>
        <mkdir dir="dist/bin"/>
        <mkdir dir="dist/lib"/>
        <mkdir dir="dist/jdsl"/>
        
        <createManifest file="${basedir}/build/manifest.rt"/>

        <copy todir="dist/bin/">
            <fileset dir="bin">
                <include name="*.sh"/>
                <include name="*.bat"/>
            </fileset>
        </copy>
        <chmod perm="ugo+x">
            <fileset dir="dist/bin">
                <include name="*.sh"/>
                <include name="*.bat"/>
            </fileset>
        </chmod>

        <jar jarfile="dist/lib/${app.jar}" 
        basedir="build/classes/"
        excludes="com/sun/japex/jdsl/**"
        manifest="${basedir}/build/manifest.rt"/>
        <copy todir="dist/lib/">
            <fileset dir="lib/jwsdp">
                <include name="*.jar"/>
            </fileset>
        </copy>
        <copy todir="dist/lib/">
            <fileset dir="lib/jfreechart">
                <include name="*.jar"/>
            </fileset>
        </copy>

        <jar jarfile="dist/jdsl/jdsl.jar" 
        basedir="build/classes/"
        includes="com/sun/japex/jdsl/**"
        manifest="${basedir}/build/manifest.rt"/>
        <copy todir="dist/jdsl/">
            <fileset dir="lib/jdsl">
                <include name="*.jar"/>
            </fileset>
        </copy>
    </target>
    
    <target name="japex-runtime" depends="dist"
        description="Create a single jar file with all Japex runtime dependencies">
        <echo message="Creating package/japex-runtime.jar ..."/>
        <mkdir dir="package/tmp"/>
        <unjar dest="package/tmp" src="dist/lib/ant.jar"/>
        <unjar dest="package/tmp" src="dist/lib/jaxb-api.jar"/>
        <unjar dest="package/tmp" src="dist/lib/jaxb-impl.jar"/>
        <unjar dest="package/tmp" src="dist/lib/jcommon-1.0.0-rc1.jar"/>
        <unjar dest="package/tmp" src="dist/lib/jfreechart-1.0.0-rc1.jar"/>
        <unjar dest="package/tmp" src="dist/lib/mail.jar"/>
        <unjar dest="package/tmp" src="dist/lib/activation.jar"/>   
        <jar basedir="package/tmp" jarfile="package/japex-runtime.jar"
             manifest="package/tmp/META-INF/MANIFEST.MF"/>
        <!-- <delete dir="package/tmp"/> -->
    </target>
    
    <target name="run" depends="dist" description="Test using simple config file">
        <ant dir="${basedir}/samples/FastInfoset" target="run" inheritrefs="true">
            <property name="config" value="speed-config.xml"/>
        </ant>
    </target>
    
    <target name="run-trendreport" depends="dist" description="Run sample trend report">
        <ant dir="${basedir}/samples/FastInfoset" target="generate-trends" inheritrefs="true"/>
    </target>
    
    <target name="debug-nb" depends="dist" description="Debug using simple config file">
        <ant dir="${basedir}/samples/FastInfoset" target="debug-nb" inheritrefs="true">
            <property name="config" value="speed-size-config.xml"/>
        </ant>
    </target>
    
    <target name="debug-nb-trendreport" depends="dist" description="Debug using simple config file">
        <ant dir="${basedir}/samples/FastInfoset" target="debug-nb-trendreport" inheritrefs="true">
            <property name="config" value="speed-size-config.xml"/>
        </ant>
    </target>
    
    <!-- 
    - Hudson packages: build.id is passed by the Hudson script:
    -->
    <target name="clean-package">
        <delete dir="${package.dir}"/>
    </target>

    <target name="prepare-package">
        <mkdir dir="${package.dir}"/>
    </target>
    
    <target name="dist-package" depends="dist, prepare-package">
        <mkdir dir="${package.dir}/japex"/>
        <mkdir dir="${package.dir}/japex/docs"/>
        <mkdir dir="${package.dir}/japex/samples"/>
        <mkdir dir="${package.dir}/japex/src"/>

        <touch file="${package.dir}/japex/JAPEX_${release.impl.version}-b${build.id}"/>
        
        <copy todir="${package.dir}/japex">
            <fileset dir="${basedir}/dist">
                <include name="**/*"/>
            </fileset>
            <fileset dir="${basedir}">
                <include name="*.txt"/>
            </fileset>
        </copy>

        <copy todir="${package.dir}/japex/docs">
            <fileset dir="${basedir}/docs">
                <include name="**/*"/>
            </fileset>
        </copy>
        <copy todir="${package.dir}/japex/samples">
            <fileset dir="${basedir}/samples">
                <include name="**/*"/>
            </fileset>
        </copy>

        <!-- Include sources but not build file or resources -->
        <zip destfile="${package.dir}/japex/src.zip">
            <fileset dir="${basedir}/src">
                <exclude name="**/CVS"/>
            </fileset>
        </zip>
        <move file="${package.dir}/japex/src.zip"
        todir="${package.dir}/japex/src"/>

        <zip destfile="${package.dir}/japex.zip">
            <fileset dir="${package.dir}">
                <include name="japex/**/*"/>
            </fileset>
        </zip>
        <delete dir="${package.dir}/japex"/>
    </target>

    <target name="package" depends="dist-package" 
    description="Creates a downloadable package with binaries, docs and samples"/>

    <target name="push-to-maven-prepare" depends="dist"
        description="Prepare a repository image for the push-to-maven target">
        <taskdef resource="maven-repository-importer.properties">
            <classpath>
                <pathelement path="tools/lib/maven-repository-importer.jar" />
            </classpath>
        </taskdef>
        <delete dir="build/maven-repo" /><!-- clean it -->
        <!-- ${suffix} can be overridden to "" for posting releases -->
        <property name="suffix" value="-SNAPSHOT" />
        <maven-repository-importer
            destdir="build/maven-repo" version="${release.impl.version}">
            <artifact
            jar="dist/lib/japex.jar"
            pom="etc/poms/japex.pom" />
            <artifact
            jar="dist/jdsl/jdsl.jar"
            pom="etc/poms/jdsl.pom" />
        </maven-repository-importer>
    </target>

    <macrodef name="cvs-import">
        <attribute name="src"/>
        <attribute name="dest"/>
        <attribute name="cvsroot"/>
        <sequential>
            <tstamp />
            <echo>Importing to CVS ...</echo>
            <cvs dest="@{src}">
                <commandline>
                    <argument value="-d@{cvsroot}"/>
                    <argument line="-z9 import -ko"/>
                    <argument value="-W"/>
                    <argument line="*.jar -kb"/>
                    <argument value="-m"/>
                    <argument value="deploying new jars to the java.net maven repository"/>
          
                    <argument value="@{dest}"/>
                    <argument line="deployment-to-maven-repository t${DSTAMP}${TSTAMP}" />
                </commandline>
            </cvs>
        </sequential>
    </macrodef>
  
    <!-- 
    - Define a build.properties file in your home directory
    - as follows:
    - maven.proxy.host=...
    - maven.proxy.port=...
    - java.net.user.name=...
    -->
    <target name="push-to-maven" depends="push-to-maven-prepare"
        description="Publish artifacts into the maven repository">
        <cvs-import src="build/maven-repo" dest="japex/repo" 
        cvsroot=":pserver:${java.net.user.name}@java-net-cvs:/cvs" />
    </target>

</project>
